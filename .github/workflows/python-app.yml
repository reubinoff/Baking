# This is a basic workflow to help you get started with Actions

name: Python Baking app

on:
  push:
    branches: [ develop ]


jobs:
    test:
        runs-on: ubuntu-latest
        services:
          postgres:
            # Docker Hub image
            image: postgres
            # Provide the password for postgres
            env:
              POSTGRES_PASSWORD: rootsql
            ports:
              - "5432:5432"
            # Set health checks to wait until postgres has started
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5


        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main

      
        - uses: actions/setup-python@v2
          with:
            python-version: '3.9' 
        
      

        - name: Install Poetry
          uses: snok/install-poetry@v1

        - name: 'Run Pytests'
          run: |
            cd server
            # poetry env use 3.9
            # poetry install 
            # poetry run python -m pytest -xv --cov=src/baking/routers --cov-fail-under=80 --cov-report html 

    build:
        runs-on: ubuntu-latest
        needs: test
        env:
          BASE_REPO: reubinoff/baking
          REGISTRY: reubinoff.azurecr.io
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
       
        # - name: 'Login via Azure CLI'
        #   uses: azure/login@v1
        #   with:
        #     creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: 'Log in to the Container registry'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ env.REGISTRY }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}




        # - name: Log in to the Container registry
        #   uses: docker/login-action@v1
        #   with:
        #     registry: ${{ env.REGISTRY }}
        #     username: ${{ github.actor }}
        #     password: ${{ secrets.GITHUB_TOKEN }} 

        - name: Build And Publish Docker
          run: |
            cd server
            docker-compose build
            docker tag ${{ env.BASE_REPO }}:latest ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }}
            docker tag ${{ env.BASE_REPO }}:latest ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:latest
            docker push ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:${{ github.sha }}
            docker push ${{ env.REGISTRY }}/${{ env.BASE_REPO }}:latest


    deploy:
      runs-on: ubuntu-latest
      needs: build
      env:
        BASE_REPO: reubinoff/baking
        REGISTRY: reubinoff.azurecr.io
        CONTEXT: baking
      steps:

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.2

      - uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
          context: ${{ env.CONTEXT }}

      - name: crate kubeconfig
        run: |
          echo ${{ secrets.KUBECONFIG }} > ~/.kube/config

      - name: Install k8s
        run: |
          cd deployment/charts/baking-server
          helm upgrade --install --create-namespace -n baking-deploy \
           --set imageVersion=${{ github.sha }} \
           baking-service ./

    
          
