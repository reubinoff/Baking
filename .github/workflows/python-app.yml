# This is a basic workflow to help you get started with Actions

name: Python Baking app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        services:
          mysql:
            image: mysql:5.7
            env:
              MYSQL_HOST: 127.0.0.1
              MYSQL_DB: ttt
              MYSQL_USER: test
              MYSQL_PASSWORD: sql
            ports:
              - "3306:3306"
        env:
          CERT_PATH_CI: crt.pem
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
        
        - name: Prepare environment
          run: |
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | POETRY_HOME=/opt/poetry python && \
            cd /usr/local/bin && \
            ln -s /opt/poetry/bin/poetry


        - name: 'Run Pytests'
          run: |
            cd server
            poetry env use 3.9
            poetry install 
            poetry run python -m pytest -vvvxs   

            
    deploy:
        runs-on: ubuntu-latest
        needs: test
        env:
          CERT_PATH_CI: crt.pem
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
       
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
    
        - run: |
            cd server
            echo "${{ secrets.CERT_DATA }}" > ${{ env.CERT_PATH_CI }}
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/baking-app:${{ github.sha }} --build-arg CERT_LOCATION=${{ env.CERT_PATH_CI }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/baking-app:${{ github.sha }}
        
        - uses: azure/webapps-deploy@v2
          with:
            app-name: 'baking-service'
            images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/baking-app:${{ github.sha }}
            
